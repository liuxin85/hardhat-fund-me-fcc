{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdf9529a1221b9a240de196d9701b52131f193a259a270cebccdc3807f68370f9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "893271",
    "logsBloom": "0x
    "blockHash": "0x801afc4d0d01438d020df3e9dc391b2d7a6994eb5e5932ae40aabda0972e6880",
    "transactionHash": "0xdf9529a1221b9a240de196d9701b52131f193a259a270cebccdc3807f68370f9",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "893271",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "3c1222b4899aabfbc5c343fb6e9fd507",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Xin\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n// Error Codes\\nerror FundMe__NotOwner();\\n\\n// Interfaces, Libraries, Contracts\\n/**\\n * @title A contract for crowd funding\\n * @author Xin\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n        \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     */\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n\\n\\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n\\n}\",\"keccak256\":\"0xef8bf605998aaa84cbdb40a4ef86c39078105f68f5a42a97acbf030a6f6f944c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb6270c86e57bfed077355468d6a934f19843e652c7ce8ecec9cde9e72c6fbac9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610fb7380380610fb78339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610e5e806101596000396000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100e7578063b60d428814610112578063dba6335f1461011c578063dc0d3dff1461014757610070565b80633ccfd60b146100755780633e47d6f31461007f5780636b69a592146100bc575b600080fd5b61007d610184565b005b34801561008b57600080fd5b506100a660048036038101906100a19190610796565b6103c6565b6040516100b391906107dc565b60405180910390f35b3480156100c857600080fd5b506100d16103de565b6040516100de91906107dc565b60405180910390f35b3480156100f357600080fd5b506100fc6103eb565b6040516101099190610856565b60405180910390f35b61011a610411565b005b34801561012857600080fd5b5061013161054b565b60405161013e9190610880565b60405180910390f35b34801561015357600080fd5b5061016e600480360381019061016991906108c7565b610571565b60405161017b9190610880565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461020b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102b657600060018281548110610231576102306108f4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102ae90610952565b91505061020e565b50600067ffffffffffffffff8111156102d2576102d161099b565b5b6040519080825280602002602001820160405280156103005781602001602082028036833780820191505090505b506001908051906020019061031692919061068c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161033d906109fb565b60006040518083038185875af1925050503d806000811461037a576040519150601f19603f3d011682016040523d82523d6000602084013e61037f565b606091505b50509050806103c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ba90610a6d565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b1880000610450600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b090919063ffffffff16565b1015610491576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048890610ad9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104df9190610af9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061058157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105bc836105ec565b90506000670de0b6b3a764000085836105d59190610b4f565b6105df9190610bd8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063557600080fd5b505afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190610c96565b5050509150506402540be400816106849190610d11565b915050919050565b828054828255906000526020600020908101928215610705579160200282015b828111156107045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ac565b5b5090506107129190610716565b5090565b5b8082111561072f576000816000905550600101610717565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076382610738565b9050919050565b61077381610758565b811461077e57600080fd5b50565b6000813590506107908161076a565b92915050565b6000602082840312156107ac576107ab610733565b5b60006107ba84828501610781565b91505092915050565b6000819050919050565b6107d6816107c3565b82525050565b60006020820190506107f160008301846107cd565b92915050565b6000819050919050565b600061081c61081761081284610738565b6107f7565b610738565b9050919050565b600061082e82610801565b9050919050565b600061084082610823565b9050919050565b61085081610835565b82525050565b600060208201905061086b6000830184610847565b92915050565b61087a81610758565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a4816107c3565b81146108af57600080fd5b50565b6000813590506108c18161089b565b92915050565b6000602082840312156108dd576108dc610733565b5b60006108eb848285016108b2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061095d826107c3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109905761098f610923565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109e56000836109ca565b91506109f0826109d5565b600082019050919050565b6000610a06826109d8565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a57600b83610a10565b9150610a6282610a21565b602082019050919050565b60006020820190508181036000830152610a8681610a4a565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ac3601b83610a10565b9150610ace82610a8d565b602082019050919050565b60006020820190508181036000830152610af281610ab6565b9050919050565b6000610b04826107c3565b9150610b0f836107c3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b4457610b43610923565b5b828201905092915050565b6000610b5a826107c3565b9150610b65836107c3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b9e57610b9d610923565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610be3826107c3565b9150610bee836107c3565b925082610bfe57610bfd610ba9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c2881610c09565b8114610c3357600080fd5b50565b600081519050610c4581610c1f565b92915050565b6000819050919050565b610c5e81610c4b565b8114610c6957600080fd5b50565b600081519050610c7b81610c55565b92915050565b600081519050610c908161089b565b92915050565b600080600080600060a08688031215610cb257610cb1610733565b5b6000610cc088828901610c36565b9550506020610cd188828901610c6c565b9450506040610ce288828901610c81565b9350506060610cf388828901610c81565b9250506080610d0488828901610c36565b9150509295509295909350565b6000610d1c82610c4b565b9150610d2783610c4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d6657610d65610923565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610da357610da2610923565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610de057610ddf610923565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e1d57610e1c610923565b5b82820290509291505056fea26469706673582212207dda782d597286511d457e5d3323c9393113d7a26a6cd6fb881491087c02d73864736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100e7578063b60d428814610112578063dba6335f1461011c578063dc0d3dff1461014757610070565b80633ccfd60b146100755780633e47d6f31461007f5780636b69a592146100bc575b600080fd5b61007d610184565b005b34801561008b57600080fd5b506100a660048036038101906100a19190610796565b6103c6565b6040516100b391906107dc565b60405180910390f35b3480156100c857600080fd5b506100d16103de565b6040516100de91906107dc565b60405180910390f35b3480156100f357600080fd5b506100fc6103eb565b6040516101099190610856565b60405180910390f35b61011a610411565b005b34801561012857600080fd5b5061013161054b565b60405161013e9190610880565b60405180910390f35b34801561015357600080fd5b5061016e600480360381019061016991906108c7565b610571565b60405161017b9190610880565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461020b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102b657600060018281548110610231576102306108f4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102ae90610952565b91505061020e565b50600067ffffffffffffffff8111156102d2576102d161099b565b5b6040519080825280602002602001820160405280156103005781602001602082028036833780820191505090505b506001908051906020019061031692919061068c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161033d906109fb565b60006040518083038185875af1925050503d806000811461037a576040519150601f19603f3d011682016040523d82523d6000602084013e61037f565b606091505b50509050806103c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ba90610a6d565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b1880000610450600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b090919063ffffffff16565b1015610491576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048890610ad9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104df9190610af9565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061058157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105bc836105ec565b90506000670de0b6b3a764000085836105d59190610b4f565b6105df9190610bd8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063557600080fd5b505afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190610c96565b5050509150506402540be400816106849190610d11565b915050919050565b828054828255906000526020600020908101928215610705579160200282015b828111156107045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ac565b5b5090506107129190610716565b5090565b5b8082111561072f576000816000905550600101610717565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076382610738565b9050919050565b61077381610758565b811461077e57600080fd5b50565b6000813590506107908161076a565b92915050565b6000602082840312156107ac576107ab610733565b5b60006107ba84828501610781565b91505092915050565b6000819050919050565b6107d6816107c3565b82525050565b60006020820190506107f160008301846107cd565b92915050565b6000819050919050565b600061081c61081761081284610738565b6107f7565b610738565b9050919050565b600061082e82610801565b9050919050565b600061084082610823565b9050919050565b61085081610835565b82525050565b600060208201905061086b6000830184610847565b92915050565b61087a81610758565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a4816107c3565b81146108af57600080fd5b50565b6000813590506108c18161089b565b92915050565b6000602082840312156108dd576108dc610733565b5b60006108eb848285016108b2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061095d826107c3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109905761098f610923565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109e56000836109ca565b91506109f0826109d5565b600082019050919050565b6000610a06826109d8565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a57600b83610a10565b9150610a6282610a21565b602082019050919050565b60006020820190508181036000830152610a8681610a4a565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ac3601b83610a10565b9150610ace82610a8d565b602082019050919050565b60006020820190508181036000830152610af281610ab6565b9050919050565b6000610b04826107c3565b9150610b0f836107c3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b4457610b43610923565b5b828201905092915050565b6000610b5a826107c3565b9150610b65836107c3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b9e57610b9d610923565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610be3826107c3565b9150610bee836107c3565b925082610bfe57610bfd610ba9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c2881610c09565b8114610c3357600080fd5b50565b600081519050610c4581610c1f565b92915050565b6000819050919050565b610c5e81610c4b565b8114610c6957600080fd5b50565b600081519050610c7b81610c55565b92915050565b600081519050610c908161089b565b92915050565b600080600080600060a08688031215610cb257610cb1610733565b5b6000610cc088828901610c36565b9550506020610cd188828901610c6c565b9450506040610ce288828901610c81565b9350506060610cf388828901610c81565b9250506080610d0488828901610c36565b9150509295509295909350565b6000610d1c82610c4b565b9150610d2783610c4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d6657610d65610923565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610da357610da2610923565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610de057610ddf610923565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e1d57610e1c610923565b5b82820290509291505056fea26469706673582212207dda782d597286511d457e5d3323c9393113d7a26a6cd6fb881491087c02d73864736f6c63430008080033",
  "devdoc": {
    "author": "Xin",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}